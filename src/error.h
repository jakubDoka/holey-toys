typedef enum AsmError_e {
    ErrOk = 0,
    ErrBadRegister,
    ErrImmediateOverflow,
    ErrInvalidToken,
    ErrBadArgumentMeta,
    ErrNeedCommaAfterArgument,
    ErrLabelImmediate,
    ErrNumberImmediate,
    ErrBadNumOverflow,
    ErrBadNumDigit,
    ErrBadNumNoDigit,
    ErrLabelAfterLabel,
    ErrOutOfMemory,
    ErrDuplicateLabel,
    ErrTrailingLine,
    ErrNeedDirectiveAfterDot,
    ErrDirectiveNotImplemented,
    ErrUnexpectedToken,
    ErrTriedNegateNonNumber,
    ErrInvalidDirective,
    ErrStringNewLine,
    ErrDanglingEscape,
    ErrStringBadHex,
    ErrBadStringEscape,
    ErrStringDataNotByte,
    ErrAlignNeedsNumber,
    ErrAlignNeedsPow2,
    ErrNeedCommaOrNewline,
    ErrNeedsDataLiteral,
} AsmError;
char *ERRORS[] = {
    "Success",
    "Bad register name",
    "Immediate integer OR relative offset overflow",
    "Invalid token",
    "Bad argument char? (blame developer of this program)",
    "Expected comma after the argument, got something else",
    "Label immediate needs label or number",
    "Immediate needs to be a number",
    "Bad number: u64 overflow",
    "Bad number: encountered bad gidit",
    "Bad number: no digits presented after the suffix",
    "Encountered label after label",
    "Out of Memory",
    "Duplicate label",
    "Encountered trailing identifier after instruction",
    "Expected directive after dot",
    "Directive is not implemented",
    "Unexpected token",
    "Negation only works on numbers",
    "Invalid directive",
    "String contains a raw newline (did you forget to close the quote?)",
    "Dangling escape in string literal",
    "Bad hex in string literal",
    "Bad escape sequence in string literal",
    "String literals can be used only in .db directive",
    ".align requires a number",
    ".align requires a power of two as an argument",
    "Need comma or newline after data literal",
    "Data literal expects a number or a string",
};
